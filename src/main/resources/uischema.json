{
  "id": "org.wso2.carbon.inbound.poll.dbeventlistener.DBEventPollingConsumer",
  "name": "dbEventInbound",
  "type": "inbound-connector",
  "title": "Database Event Inbound Connector",
  "help": "Configure the database event inbound connector to poll a database for changes and process them accordingly.",
  "elements": [
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Generic",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "name",
              "displayName": "Inbound Endpoint Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "Unique identifier for the DB event inbound endpoint."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "class",
              "displayName": "Class Name",
              "inputType": "string",
              "required": "true",
              "hidden": true,
              "defaultValue": "org.wso2.carbon.inbound.poll.dbeventlistener.DBEventPollingConsumer"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "sequence",
              "displayName": "Injecting Sequence Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "Sequence to inject the DB event message"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "onError",
              "displayName": "Error Sequence Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "Error sequence to invoke on fault"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "suspend",
              "displayName": "Suspend Inbound",
              "inputType": "checkbox",
              "defaultValue": false,
              "hidden": true,
              "required": "false",
              "helpTip": "Suspend Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Inbound Functional",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "interval",
              "displayName": "Polling interval",
              "inputType": "string",
              "required": "true",
              "helpTip": "The polling interval for the DB event inbound endpoint."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "sequential",
              "displayName": "Execute sequentially",
              "inputType": "checkbox",
              "defaultValue": true,
              "required": "false",
              "helpTip": "The behaviour when executing the given sequence."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "coordination",
              "displayName": "Coordination",
              "inputType": "checkbox",
              "defaultValue": true,
              "required": "false",
              "helpTip": "In a clustered setup, this will run the inbound only in a single worker node."
            }
          }
        ]
      }
    },
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Database",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "driverName",
              "displayName": "Driver Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "The class name of the database driver."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "url",
              "displayName": "URL",
              "inputType": "string",
              "required": "true",
              "helpTip": "The JDBC URL of the database in jdbc:<DB_TYPE>://<HOST>:<PORT>/<DATABASE_NAME> format"
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "username",
              "displayName": "Username",
              "inputType": "string",
              "required": "true",
              "helpTip": "The user name to connect to the database."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "password",
              "displayName": "Password",
              "inputType": "string",
              "required": "true",
              "helpTip": "The password to connect to the database."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "tableName",
              "displayName": "Table Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "The name of the table to capture changes to records."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "primaryKey",
              "displayName": "Primary Key",
              "inputType": "string",
              "required": "true",
              "helpTip": "The primary key column name."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "connectionValidationQuery",
              "displayName": "Connection Validation Query",
              "inputType": "string",
              "required": "false",
              "helpTip": "The query to check the availability of the connection.",
              "defaultValue": "SELECT 1"
            }
          }
        ]
      }
    },
    {
      "type": "attributeGroup",
      "value": {
        "groupName": "Filtering",
        "elements": [
          {
            "type": "attribute",
            "value": {
              "name": "filteringCriteria",
              "displayName": "Filtering Criteria",
              "inputType": "combo",
              "required": "true",
              "comboValues": [
                "byLastUpdatedTimestampColumn",
                "byBooleanColumn",
                "deleteAfterPoll"
              ],
              "helpTip": "The criteria to poll the database for record changes."
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "filteringColumnName",
              "displayName": "Filtering Column Name",
              "inputType": "string",
              "required": "true",
              "helpTip": "The actual name of the column that captures changes.",
              "enableCondition": ["OR",{"filteringCriteria":"byLastUpdatedTimestampColumn"}, {"filteringCriteria":"byBooleanColumn"}]
            }
          },
          {
            "type": "attribute",
            "value": {
              "name": "registryPath",
              "displayName": "Registry Path",
              "inputType": "string",
              "required": "false",
              "helpTip": "The registry path of the timestamp. By default, a registry resource with the Inbound name is created.",
              "enableCondition": [{"filteringCriteria":"byLastUpdatedTimestampColumn"}]
            }
          }
        ]
      }
    }
  ]
}
